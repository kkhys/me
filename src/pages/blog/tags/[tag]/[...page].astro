---
import ArrowLeftIcon from "@lucide/astro/icons/arrow-left";
import type { PaginateFunction } from "astro";
import SEO from "#/components/seo.astro";
import { countPerPage } from "#/config/constant";
import EntryList from "#/features/blog/components/ui/entry-list.astro";
import Pagination from "#/features/blog/components/ui/pagination.astro";
import { getCategoryByTagSlug } from "#/features/blog/config/category";
import { getTagBySlug } from "#/features/blog/config/tag";
import { getPublicBlogEntries } from "#/features/blog/utils/entry";
import BaseLayout from "#/layouts/base-layout.astro";

export const getStaticPaths = async ({
  paginate,
}: {
  paginate: PaginateFunction;
}) => {
  const blogEntries = await getPublicBlogEntries();
  const tags = [
    ...new Set(blogEntries.flatMap((entry) => entry.data.tags ?? [])),
  ];
  return tags.flatMap((tag) => {
    const filteredEntries = blogEntries
      .filter((post) => post.data.tags?.includes(tag))
      .sort(
        (a, b) => a.data.publishedAt.getTime() - b.data.publishedAt.getTime(),
      )
      .reverse();
    return paginate(filteredEntries, {
      pageSize: countPerPage,
      params: { tag: tag.toLowerCase().replace(/[\s.]+/g, "-") },
    });
  });
};

const { page } = Astro.props;
const { tag: tagSlug } = Astro.params;

const tag = getTagBySlug(tagSlug);

if (!tag) {
  throw new Error(`Tag "${tagSlug}" not found`);
}

const category = getCategoryByTagSlug(tagSlug);

if (!category) {
  throw new Error(`Category for tag "${tagSlug}" not found`);
}
---

<BaseLayout class="space-y-6">
    <SEO
            title={tag.label}
            description={`「${tag.label}」のタグがついた記事一覧`}
            slot='seo'
    />
    <section>
        <div class="inline-flex gap-1.5 items-center text-xs">
            <a href={`/blog/categories/${category.slug}`} class="inline-flex gap-1 items-center text-muted-foreground hover:underline">
                <ArrowLeftIcon class="size-3.5" />
                {category.label}
            </a>
            <span class="text-muted-foreground">/</span>
            <h1 class="font-semibold">
                {tag.label}
            </h1>
        </div>
    </section>
    <section>
        <EntryList blogEntries={page.data} showDate />
    </section>
    <Pagination page={page} baseUrl={`/blog/tags/${tag}`} />
</BaseLayout>
